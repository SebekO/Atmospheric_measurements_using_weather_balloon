#include <SPI.h>
#include <SD.h>
#include <OneWire.h>
#include <DallasTemperature.h>

File myFile;
// set this to the hardware serial port you wish to use
#define H2S Serial1
#define O3 Serial2
#define TELE Serial3
#define ONE_WIRE_BUS 3

// Setup a oneWire instance to communicate with any OneWire devices (not just Maxim/Dallas temperature ICs)
OneWire oneWire(ONE_WIRE_BUS);

// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);

// arrays to hold device address
DeviceAddress insideThermometer;


void setup(){
  Serial.begin(9600);
  H2S.begin(9600);
  O3.begin(9600);
  TELE.begin(9600);
  
  Serial.flush();
  H2S.flush();
  O3.flush();
  TELE.flush();
   
  sensors.begin();// Start up the library DallasTemperature
  Serial.print("Found ");
  Serial.print(sensors.getDeviceCount(), DEC);
  Serial.println(" devices.");
  Serial.print("Parasite power is: "); 
  if (sensors.isParasitePowerMode()) Serial.println("ON");
  else Serial.println("OFF");
  if (!sensors.getAddress(insideThermometer, 0)) Serial.println("Unable to find address for Device 0"); 
  Serial.print("Device 0 Address: ");
  printAddress(insideThermometer);
  Serial.println();
  Serial.print("Device 0 Resolution: ");
  Serial.print(sensors.getResolution(insideThermometer), DEC); 
  Serial.println();

  Serial.print("Initializing SD card...");
  if (!SD.begin(BUILTIN_SDCARD)){
    Serial.println("initialization failed!");
    while (1);


    
  }
  while (H2S.available()&&O3.available()) // read from SDK port, send to Serial port to interupt send 'c' without line ending
  {
    int inByte1 = H2S.read();
    int inByte2 = O3.read();
    Serial.write(inByte1);
    Serial.write(inByte2);
  }
  Serial.println();
  Serial.println("initialization done.");
  Serial.println("Finished Setup");
  Serial.println("Sensor #, Conc.(PPB), Temp.(C), Rh (%),Conc. (Counts), Temp. (Counts), Rh (%Counts), Days, Hours, Minutes, Seconds");
  H2S.write('c');
  O3.write('c');
}

void printTemperature(DeviceAddress deviceAddress)
{
  // method 1 - slower
  //Serial.print("Temp C: ");
  //Serial.print(sensors.getTempC(deviceAddress));
  //Serial.print(" Temp F: ");
  //Serial.print(sensors.getTempF(deviceAddress)); // Makes a second call to getTempC and then converts to Fahrenheit

  // method 2 - faster
  float tempC = sensors.getTempC(deviceAddress);
  
  Serial.print(tempC);
  Serial.print("C");
  Serial.println();
  TELE.write(tempC);
  TELE.write('\n');
}

void loop(){
  myFile = SD.open("dane.txt", FILE_WRITE);       
  if (H2S.available()&&O3.available() > 0) {
    //DGS
    int inByte1 = H2S.read();
    int inByte2 = O3.read();
    // temp
    sensors.requestTemperatures();
    printTemperature(insideThermometer);
    myFile.write(inByte1);
    myFile.write('\n');
    myFile.write(inByte2);
    myFile.write('\n');
    
    Serial.write(inByte1);
    Serial.println();
    Serial.write(inByte2);
    Serial.println();
    Serial.print("Temp C: ");
    
    TELE.write(inByte1);
    TELE.write('\n');
    TELE.write(inByte2);
    TELE.write('\n');
  }
  myFile.close();
}

void printAddress(DeviceAddress deviceAddress)
{
  for (uint8_t i = 0; i < 8; i++)
  {
    if (deviceAddress[i] < 16) Serial.print("0");
    Serial.print(deviceAddress[i], HEX);
  }
}
